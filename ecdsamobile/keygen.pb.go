// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v4.22.2
// source: keygen.proto

package ecdsamobile

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DlogProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base        []byte `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Challenge   []byte `protobuf:"bytes,2,opt,name=challenge,proto3" json:"challenge,omitempty"`
	Randcommit  []byte `protobuf:"bytes,3,opt,name=randcommit,proto3" json:"randcommit,omitempty"`
	Publicshare []byte `protobuf:"bytes,4,opt,name=publicshare,proto3" json:"publicshare,omitempty"`
	Hiddenvalue []byte `protobuf:"bytes,5,opt,name=hiddenvalue,proto3" json:"hiddenvalue,omitempty"`
}

func (x *DlogProof) Reset() {
	*x = DlogProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keygen_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DlogProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DlogProof) ProtoMessage() {}

func (x *DlogProof) ProtoReflect() protoreflect.Message {
	mi := &file_keygen_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DlogProof.ProtoReflect.Descriptor instead.
func (*DlogProof) Descriptor() ([]byte, []int) {
	return file_keygen_proto_rawDescGZIP(), []int{0}
}

func (x *DlogProof) GetBase() []byte {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *DlogProof) GetChallenge() []byte {
	if x != nil {
		return x.Challenge
	}
	return nil
}

func (x *DlogProof) GetRandcommit() []byte {
	if x != nil {
		return x.Randcommit
	}
	return nil
}

func (x *DlogProof) GetPublicshare() []byte {
	if x != nil {
		return x.Publicshare
	}
	return nil
}

func (x *DlogProof) GetHiddenvalue() []byte {
	if x != nil {
		return x.Hiddenvalue
	}
	return nil
}

type EcddhProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A1        []byte `protobuf:"bytes,1,opt,name=a1,proto3" json:"a1,omitempty"`
	A2        []byte `protobuf:"bytes,2,opt,name=a2,proto3" json:"a2,omitempty"`
	Z         []byte `protobuf:"bytes,3,opt,name=z,proto3" json:"z,omitempty"`
	Hashcoice []byte `protobuf:"bytes,4,opt,name=hashcoice,proto3" json:"hashcoice,omitempty"`
}

func (x *EcddhProof) Reset() {
	*x = EcddhProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keygen_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcddhProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcddhProof) ProtoMessage() {}

func (x *EcddhProof) ProtoReflect() protoreflect.Message {
	mi := &file_keygen_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcddhProof.ProtoReflect.Descriptor instead.
func (*EcddhProof) Descriptor() ([]byte, []int) {
	return file_keygen_proto_rawDescGZIP(), []int{1}
}

func (x *EcddhProof) GetA1() []byte {
	if x != nil {
		return x.A1
	}
	return nil
}

func (x *EcddhProof) GetA2() []byte {
	if x != nil {
		return x.A2
	}
	return nil
}

func (x *EcddhProof) GetZ() []byte {
	if x != nil {
		return x.Z
	}
	return nil
}

func (x *EcddhProof) GetHashcoice() []byte {
	if x != nil {
		return x.Hashcoice
	}
	return nil
}

type EcddhStatement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	G1 []byte `protobuf:"bytes,1,opt,name=g1,proto3" json:"g1,omitempty"`
	H1 []byte `protobuf:"bytes,2,opt,name=h1,proto3" json:"h1,omitempty"`
	G2 []byte `protobuf:"bytes,3,opt,name=g2,proto3" json:"g2,omitempty"`
	H2 []byte `protobuf:"bytes,4,opt,name=h2,proto3" json:"h2,omitempty"`
}

func (x *EcddhStatement) Reset() {
	*x = EcddhStatement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keygen_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcddhStatement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcddhStatement) ProtoMessage() {}

func (x *EcddhStatement) ProtoReflect() protoreflect.Message {
	mi := &file_keygen_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcddhStatement.ProtoReflect.Descriptor instead.
func (*EcddhStatement) Descriptor() ([]byte, []int) {
	return file_keygen_proto_rawDescGZIP(), []int{2}
}

func (x *EcddhStatement) GetG1() []byte {
	if x != nil {
		return x.G1
	}
	return nil
}

func (x *EcddhStatement) GetH1() []byte {
	if x != nil {
		return x.H1
	}
	return nil
}

func (x *EcddhStatement) GetG2() []byte {
	if x != nil {
		return x.G2
	}
	return nil
}

func (x *EcddhStatement) GetH2() []byte {
	if x != nil {
		return x.H2
	}
	return nil
}

type EcddhWitness struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X []byte `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
}

func (x *EcddhWitness) Reset() {
	*x = EcddhWitness{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keygen_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcddhWitness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcddhWitness) ProtoMessage() {}

func (x *EcddhWitness) ProtoReflect() protoreflect.Message {
	mi := &file_keygen_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcddhWitness.ProtoReflect.Descriptor instead.
func (*EcddhWitness) Descriptor() ([]byte, []int) {
	return file_keygen_proto_rawDescGZIP(), []int{3}
}

func (x *EcddhWitness) GetX() []byte {
	if x != nil {
		return x.X
	}
	return nil
}

type P2KeyGenFirstMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dlnproof   *DlogProof `protobuf:"bytes,1,opt,name=dlnproof,proto3" json:"dlnproof,omitempty"`
	Publickey  []byte     `protobuf:"bytes,2,opt,name=publickey,proto3" json:"publickey,omitempty"`
	Privatekey []byte     `protobuf:"bytes,3,opt,name=privatekey,proto3" json:"privatekey,omitempty"`
}

func (x *P2KeyGenFirstMessage) Reset() {
	*x = P2KeyGenFirstMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keygen_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P2KeyGenFirstMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P2KeyGenFirstMessage) ProtoMessage() {}

func (x *P2KeyGenFirstMessage) ProtoReflect() protoreflect.Message {
	mi := &file_keygen_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P2KeyGenFirstMessage.ProtoReflect.Descriptor instead.
func (*P2KeyGenFirstMessage) Descriptor() ([]byte, []int) {
	return file_keygen_proto_rawDescGZIP(), []int{4}
}

func (x *P2KeyGenFirstMessage) GetDlnproof() *DlogProof {
	if x != nil {
		return x.Dlnproof
	}
	return nil
}

func (x *P2KeyGenFirstMessage) GetPublickey() []byte {
	if x != nil {
		return x.Publickey
	}
	return nil
}

func (x *P2KeyGenFirstMessage) GetPrivatekey() []byte {
	if x != nil {
		return x.Privatekey
	}
	return nil
}

type P1KeyGenFirstMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commitment    []byte `protobuf:"bytes,1,opt,name=commitment,proto3" json:"commitment,omitempty"`
	Commitmentzkp []byte `protobuf:"bytes,2,opt,name=commitmentzkp,proto3" json:"commitmentzkp,omitempty"`
}

func (x *P1KeyGenFirstMessage) Reset() {
	*x = P1KeyGenFirstMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keygen_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P1KeyGenFirstMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P1KeyGenFirstMessage) ProtoMessage() {}

func (x *P1KeyGenFirstMessage) ProtoReflect() protoreflect.Message {
	mi := &file_keygen_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P1KeyGenFirstMessage.ProtoReflect.Descriptor instead.
func (*P1KeyGenFirstMessage) Descriptor() ([]byte, []int) {
	return file_keygen_proto_rawDescGZIP(), []int{5}
}

func (x *P1KeyGenFirstMessage) GetCommitment() []byte {
	if x != nil {
		return x.Commitment
	}
	return nil
}

func (x *P1KeyGenFirstMessage) GetCommitmentzkp() []byte {
	if x != nil {
		return x.Commitmentzkp
	}
	return nil
}

type CommitWitness struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pkcommitmentblindfactor []byte `protobuf:"bytes,1,opt,name=pkcommitmentblindfactor,proto3" json:"pkcommitmentblindfactor,omitempty"`
	Zkblindfactor           []byte `protobuf:"bytes,2,opt,name=zkblindfactor,proto3" json:"zkblindfactor,omitempty"`
	Publicshare             []byte `protobuf:"bytes,3,opt,name=publicshare,proto3" json:"publicshare,omitempty"`
	Dlogproof               []byte `protobuf:"bytes,4,opt,name=dlogproof,proto3" json:"dlogproof,omitempty"`
}

func (x *CommitWitness) Reset() {
	*x = CommitWitness{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keygen_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitWitness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitWitness) ProtoMessage() {}

func (x *CommitWitness) ProtoReflect() protoreflect.Message {
	mi := &file_keygen_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitWitness.ProtoReflect.Descriptor instead.
func (*CommitWitness) Descriptor() ([]byte, []int) {
	return file_keygen_proto_rawDescGZIP(), []int{6}
}

func (x *CommitWitness) GetPkcommitmentblindfactor() []byte {
	if x != nil {
		return x.Pkcommitmentblindfactor
	}
	return nil
}

func (x *CommitWitness) GetZkblindfactor() []byte {
	if x != nil {
		return x.Zkblindfactor
	}
	return nil
}

func (x *CommitWitness) GetPublicshare() []byte {
	if x != nil {
		return x.Publicshare
	}
	return nil
}

func (x *CommitWitness) GetDlogproof() []byte {
	if x != nil {
		return x.Dlogproof
	}
	return nil
}

type P1KeyGenSecondMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Witness *CommitWitness `protobuf:"bytes,1,opt,name=witness,proto3" json:"witness,omitempty"`
}

func (x *P1KeyGenSecondMessage) Reset() {
	*x = P1KeyGenSecondMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keygen_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P1KeyGenSecondMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P1KeyGenSecondMessage) ProtoMessage() {}

func (x *P1KeyGenSecondMessage) ProtoReflect() protoreflect.Message {
	mi := &file_keygen_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P1KeyGenSecondMessage.ProtoReflect.Descriptor instead.
func (*P1KeyGenSecondMessage) Descriptor() ([]byte, []int) {
	return file_keygen_proto_rawDescGZIP(), []int{7}
}

func (x *P1KeyGenSecondMessage) GetWitness() *CommitWitness {
	if x != nil {
		return x.Witness
	}
	return nil
}

type PublicKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secretshare           []byte `protobuf:"bytes,1,opt,name=secretshare,proto3" json:"secretshare,omitempty"`
	Otherpartypublicshare []byte `protobuf:"bytes,2,opt,name=otherpartypublicshare,proto3" json:"otherpartypublicshare,omitempty"`
}

func (x *PublicKeyRequest) Reset() {
	*x = PublicKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keygen_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKeyRequest) ProtoMessage() {}

func (x *PublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keygen_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKeyRequest.ProtoReflect.Descriptor instead.
func (*PublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_keygen_proto_rawDescGZIP(), []int{8}
}

func (x *PublicKeyRequest) GetSecretshare() []byte {
	if x != nil {
		return x.Secretshare
	}
	return nil
}

func (x *PublicKeyRequest) GetOtherpartypublicshare() []byte {
	if x != nil {
		return x.Otherpartypublicshare
	}
	return nil
}

type PublicKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X []byte `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y []byte `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *PublicKeyResponse) Reset() {
	*x = PublicKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keygen_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKeyResponse) ProtoMessage() {}

func (x *PublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keygen_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKeyResponse.ProtoReflect.Descriptor instead.
func (*PublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_keygen_proto_rawDescGZIP(), []int{9}
}

func (x *PublicKeyResponse) GetX() []byte {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *PublicKeyResponse) GetY() []byte {
	if x != nil {
		return x.Y
	}
	return nil
}

type EphemeralCommitWitness struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pkcommitmentblindfactor []byte      `protobuf:"bytes,1,opt,name=pkcommitmentblindfactor,proto3" json:"pkcommitmentblindfactor,omitempty"`
	Zkproofblindfactor      []byte      `protobuf:"bytes,2,opt,name=zkproofblindfactor,proto3" json:"zkproofblindfactor,omitempty"`
	Publicshare             []byte      `protobuf:"bytes,3,opt,name=publicshare,proto3" json:"publicshare,omitempty"`
	Dlogproof               *EcddhProof `protobuf:"bytes,4,opt,name=dlogproof,proto3" json:"dlogproof,omitempty"`
	C                       []byte      `protobuf:"bytes,5,opt,name=c,proto3" json:"c,omitempty"` // c = secretshare*basepoint2
}

func (x *EphemeralCommitWitness) Reset() {
	*x = EphemeralCommitWitness{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keygen_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EphemeralCommitWitness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EphemeralCommitWitness) ProtoMessage() {}

func (x *EphemeralCommitWitness) ProtoReflect() protoreflect.Message {
	mi := &file_keygen_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EphemeralCommitWitness.ProtoReflect.Descriptor instead.
func (*EphemeralCommitWitness) Descriptor() ([]byte, []int) {
	return file_keygen_proto_rawDescGZIP(), []int{10}
}

func (x *EphemeralCommitWitness) GetPkcommitmentblindfactor() []byte {
	if x != nil {
		return x.Pkcommitmentblindfactor
	}
	return nil
}

func (x *EphemeralCommitWitness) GetZkproofblindfactor() []byte {
	if x != nil {
		return x.Zkproofblindfactor
	}
	return nil
}

func (x *EphemeralCommitWitness) GetPublicshare() []byte {
	if x != nil {
		return x.Publicshare
	}
	return nil
}

func (x *EphemeralCommitWitness) GetDlogproof() *EcddhProof {
	if x != nil {
		return x.Dlogproof
	}
	return nil
}

func (x *EphemeralCommitWitness) GetC() []byte {
	if x != nil {
		return x.C
	}
	return nil
}

type P1EphemeralKeyGenFirstMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EcddhProof  []byte `protobuf:"bytes,1,opt,name=ecddhProof,proto3" json:"ecddhProof,omitempty"`
	Publicshare []byte `protobuf:"bytes,2,opt,name=publicshare,proto3" json:"publicshare,omitempty"`
	C           []byte `protobuf:"bytes,3,opt,name=c,proto3" json:"c,omitempty"`
}

func (x *P1EphemeralKeyGenFirstMessage) Reset() {
	*x = P1EphemeralKeyGenFirstMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keygen_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P1EphemeralKeyGenFirstMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P1EphemeralKeyGenFirstMessage) ProtoMessage() {}

func (x *P1EphemeralKeyGenFirstMessage) ProtoReflect() protoreflect.Message {
	mi := &file_keygen_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P1EphemeralKeyGenFirstMessage.ProtoReflect.Descriptor instead.
func (*P1EphemeralKeyGenFirstMessage) Descriptor() ([]byte, []int) {
	return file_keygen_proto_rawDescGZIP(), []int{11}
}

func (x *P1EphemeralKeyGenFirstMessage) GetEcddhProof() []byte {
	if x != nil {
		return x.EcddhProof
	}
	return nil
}

func (x *P1EphemeralKeyGenFirstMessage) GetPublicshare() []byte {
	if x != nil {
		return x.Publicshare
	}
	return nil
}

func (x *P1EphemeralKeyGenFirstMessage) GetC() []byte {
	if x != nil {
		return x.C
	}
	return nil
}

type P2EphemeralKeyGenFirstMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commitment    []byte `protobuf:"bytes,1,opt,name=commitment,proto3" json:"commitment,omitempty"`
	Commitmentzkp []byte `protobuf:"bytes,2,opt,name=commitmentzkp,proto3" json:"commitmentzkp,omitempty"`
}

func (x *P2EphemeralKeyGenFirstMessage) Reset() {
	*x = P2EphemeralKeyGenFirstMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keygen_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P2EphemeralKeyGenFirstMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P2EphemeralKeyGenFirstMessage) ProtoMessage() {}

func (x *P2EphemeralKeyGenFirstMessage) ProtoReflect() protoreflect.Message {
	mi := &file_keygen_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P2EphemeralKeyGenFirstMessage.ProtoReflect.Descriptor instead.
func (*P2EphemeralKeyGenFirstMessage) Descriptor() ([]byte, []int) {
	return file_keygen_proto_rawDescGZIP(), []int{12}
}

func (x *P2EphemeralKeyGenFirstMessage) GetCommitment() []byte {
	if x != nil {
		return x.Commitment
	}
	return nil
}

func (x *P2EphemeralKeyGenFirstMessage) GetCommitmentzkp() []byte {
	if x != nil {
		return x.Commitmentzkp
	}
	return nil
}

type P2EphemeralKeyGenSecondMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commitwitness *EphemeralCommitWitness `protobuf:"bytes,1,opt,name=commitwitness,proto3" json:"commitwitness,omitempty"`
}

func (x *P2EphemeralKeyGenSecondMessage) Reset() {
	*x = P2EphemeralKeyGenSecondMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keygen_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P2EphemeralKeyGenSecondMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P2EphemeralKeyGenSecondMessage) ProtoMessage() {}

func (x *P2EphemeralKeyGenSecondMessage) ProtoReflect() protoreflect.Message {
	mi := &file_keygen_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P2EphemeralKeyGenSecondMessage.ProtoReflect.Descriptor instead.
func (*P2EphemeralKeyGenSecondMessage) Descriptor() ([]byte, []int) {
	return file_keygen_proto_rawDescGZIP(), []int{13}
}

func (x *P2EphemeralKeyGenSecondMessage) GetCommitwitness() *EphemeralCommitWitness {
	if x != nil {
		return x.Commitwitness
	}
	return nil
}

type EphemeralEcKeyPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Publickey  []byte `protobuf:"bytes,1,opt,name=publickey,proto3" json:"publickey,omitempty"`
	Privatekey []byte `protobuf:"bytes,2,opt,name=privatekey,proto3" json:"privatekey,omitempty"`
}

func (x *EphemeralEcKeyPair) Reset() {
	*x = EphemeralEcKeyPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keygen_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EphemeralEcKeyPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EphemeralEcKeyPair) ProtoMessage() {}

func (x *EphemeralEcKeyPair) ProtoReflect() protoreflect.Message {
	mi := &file_keygen_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EphemeralEcKeyPair.ProtoReflect.Descriptor instead.
func (*EphemeralEcKeyPair) Descriptor() ([]byte, []int) {
	return file_keygen_proto_rawDescGZIP(), []int{14}
}

func (x *EphemeralEcKeyPair) GetPublickey() []byte {
	if x != nil {
		return x.Publickey
	}
	return nil
}

func (x *EphemeralEcKeyPair) GetPrivatekey() []byte {
	if x != nil {
		return x.Privatekey
	}
	return nil
}

type P2EphemeralCommitmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keygenmsg    *P2EphemeralKeyGenFirstMessage `protobuf:"bytes,1,opt,name=keygenmsg,proto3" json:"keygenmsg,omitempty"`
	Witness      *EphemeralCommitWitness        `protobuf:"bytes,2,opt,name=witness,proto3" json:"witness,omitempty"`
	Ephemeralkey *EphemeralEcKeyPair            `protobuf:"bytes,3,opt,name=ephemeralkey,proto3" json:"ephemeralkey,omitempty"`
}

func (x *P2EphemeralCommitmentsResponse) Reset() {
	*x = P2EphemeralCommitmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keygen_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P2EphemeralCommitmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P2EphemeralCommitmentsResponse) ProtoMessage() {}

func (x *P2EphemeralCommitmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keygen_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P2EphemeralCommitmentsResponse.ProtoReflect.Descriptor instead.
func (*P2EphemeralCommitmentsResponse) Descriptor() ([]byte, []int) {
	return file_keygen_proto_rawDescGZIP(), []int{15}
}

func (x *P2EphemeralCommitmentsResponse) GetKeygenmsg() *P2EphemeralKeyGenFirstMessage {
	if x != nil {
		return x.Keygenmsg
	}
	return nil
}

func (x *P2EphemeralCommitmentsResponse) GetWitness() *EphemeralCommitWitness {
	if x != nil {
		return x.Witness
	}
	return nil
}

func (x *P2EphemeralCommitmentsResponse) GetEphemeralkey() *EphemeralEcKeyPair {
	if x != nil {
		return x.Ephemeralkey
	}
	return nil
}

type EphemeralKeyVerificationInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyGenMsg     *P1EphemeralKeyGenFirstMessage `protobuf:"bytes,1,opt,name=keyGenMsg,proto3" json:"keyGenMsg,omitempty"`
	CommitWitness *EphemeralCommitWitness        `protobuf:"bytes,2,opt,name=commitWitness,proto3" json:"commitWitness,omitempty"`
}

func (x *EphemeralKeyVerificationInput) Reset() {
	*x = EphemeralKeyVerificationInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keygen_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EphemeralKeyVerificationInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EphemeralKeyVerificationInput) ProtoMessage() {}

func (x *EphemeralKeyVerificationInput) ProtoReflect() protoreflect.Message {
	mi := &file_keygen_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EphemeralKeyVerificationInput.ProtoReflect.Descriptor instead.
func (*EphemeralKeyVerificationInput) Descriptor() ([]byte, []int) {
	return file_keygen_proto_rawDescGZIP(), []int{16}
}

func (x *EphemeralKeyVerificationInput) GetKeyGenMsg() *P1EphemeralKeyGenFirstMessage {
	if x != nil {
		return x.KeyGenMsg
	}
	return nil
}

func (x *EphemeralKeyVerificationInput) GetCommitWitness() *EphemeralCommitWitness {
	if x != nil {
		return x.CommitWitness
	}
	return nil
}

type PartialSignatureInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncryptionKey      []byte `protobuf:"bytes,1,opt,name=encryptionKey,proto3" json:"encryptionKey,omitempty"`
	EncryptedShare     []byte `protobuf:"bytes,2,opt,name=encryptedShare,proto3" json:"encryptedShare,omitempty"`
	LocalShare         []byte `protobuf:"bytes,3,opt,name=localShare,proto3" json:"localShare,omitempty"`
	EphemeralSecret    []byte `protobuf:"bytes,4,opt,name=ephemeralSecret,proto3" json:"ephemeralSecret,omitempty"`
	EphemeralRemoteKey []byte `protobuf:"bytes,5,opt,name=ephemeralRemoteKey,proto3" json:"ephemeralRemoteKey,omitempty"`
	Msg                []byte `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *PartialSignatureInput) Reset() {
	*x = PartialSignatureInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keygen_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartialSignatureInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartialSignatureInput) ProtoMessage() {}

func (x *PartialSignatureInput) ProtoReflect() protoreflect.Message {
	mi := &file_keygen_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartialSignatureInput.ProtoReflect.Descriptor instead.
func (*PartialSignatureInput) Descriptor() ([]byte, []int) {
	return file_keygen_proto_rawDescGZIP(), []int{17}
}

func (x *PartialSignatureInput) GetEncryptionKey() []byte {
	if x != nil {
		return x.EncryptionKey
	}
	return nil
}

func (x *PartialSignatureInput) GetEncryptedShare() []byte {
	if x != nil {
		return x.EncryptedShare
	}
	return nil
}

func (x *PartialSignatureInput) GetLocalShare() []byte {
	if x != nil {
		return x.LocalShare
	}
	return nil
}

func (x *PartialSignatureInput) GetEphemeralSecret() []byte {
	if x != nil {
		return x.EphemeralSecret
	}
	return nil
}

func (x *PartialSignatureInput) GetEphemeralRemoteKey() []byte {
	if x != nil {
		return x.EphemeralRemoteKey
	}
	return nil
}

func (x *PartialSignatureInput) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

type PartialSignatureOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	C3 []byte `protobuf:"bytes,1,opt,name=C3,proto3" json:"C3,omitempty"`
}

func (x *PartialSignatureOutput) Reset() {
	*x = PartialSignatureOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keygen_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartialSignatureOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartialSignatureOutput) ProtoMessage() {}

func (x *PartialSignatureOutput) ProtoReflect() protoreflect.Message {
	mi := &file_keygen_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartialSignatureOutput.ProtoReflect.Descriptor instead.
func (*PartialSignatureOutput) Descriptor() ([]byte, []int) {
	return file_keygen_proto_rawDescGZIP(), []int{18}
}

func (x *PartialSignatureOutput) GetC3() []byte {
	if x != nil {
		return x.C3
	}
	return nil
}

var File_keygen_proto protoreflect.FileDescriptor

var file_keygen_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6b, 0x65, 0x79, 0x67, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x74, 0x73, 0x73, 0x6c, 0x69, 0x62, 0x22, 0xa1, 0x01, 0x0a, 0x09, 0x44, 0x6c, 0x6f, 0x67, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x64, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x64,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x68,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x58, 0x0a, 0x0a, 0x45, 0x63,
	0x64, 0x64, 0x68, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x61, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x32, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x61, 0x32, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x01, 0x7a, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x68, 0x63, 0x6f,
	0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x68, 0x61, 0x73, 0x68, 0x63,
	0x6f, 0x69, 0x63, 0x65, 0x22, 0x50, 0x0a, 0x0e, 0x45, 0x63, 0x64, 0x64, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x67, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x02, 0x67, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x31, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x02, 0x68, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x67, 0x32, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x02, 0x67, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x32, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x02, 0x68, 0x32, 0x22, 0x1c, 0x0a, 0x0c, 0x45, 0x63, 0x64, 0x64, 0x68, 0x57,
	0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x01, 0x78, 0x22, 0x83, 0x01, 0x0a, 0x14, 0x50, 0x32, 0x4b, 0x65, 0x79, 0x47, 0x65,
	0x6e, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a,
	0x08, 0x64, 0x6c, 0x6e, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x74, 0x73, 0x73, 0x6c, 0x69, 0x62, 0x2e, 0x44, 0x6c, 0x6f, 0x67, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x52, 0x08, 0x64, 0x6c, 0x6e, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x79, 0x22, 0x5c, 0x0a, 0x14, 0x50, 0x31,
	0x4b, 0x65, 0x79, 0x47, 0x65, 0x6e, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x7a, 0x6b, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x7a, 0x6b, 0x70, 0x22, 0xaf, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x70, 0x6b,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x17, 0x70, 0x6b, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x66, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x7a, 0x6b, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x7a, 0x6b, 0x62,
	0x6c, 0x69, 0x6e, 0x64, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x6c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x64, 0x6c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x48, 0x0a, 0x15, 0x50, 0x31,
	0x4b, 0x65, 0x79, 0x47, 0x65, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x73, 0x73, 0x6c, 0x69, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x07, 0x77, 0x69, 0x74,
	0x6e, 0x65, 0x73, 0x73, 0x22, 0x6a, 0x0a, 0x10, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x22, 0x2f, 0x0a, 0x11, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01,
	0x79, 0x22, 0xe4, 0x01, 0x0a, 0x16, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x38, 0x0a, 0x17,
	0x70, 0x6b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x6c, 0x69, 0x6e,
	0x64, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x17, 0x70,
	0x6b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x6c, 0x69, 0x6e, 0x64,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x12, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x62, 0x6c, 0x69, 0x6e, 0x64,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x64, 0x6c, 0x6f, 0x67,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x73,
	0x73, 0x6c, 0x69, 0x62, 0x2e, 0x45, 0x63, 0x64, 0x64, 0x68, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52,
	0x09, 0x64, 0x6c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x0c, 0x0a, 0x01, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x63, 0x22, 0x6f, 0x0a, 0x1d, 0x50, 0x31, 0x45, 0x70,
	0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x47, 0x65, 0x6e, 0x46, 0x69, 0x72,
	0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x63, 0x64,
	0x64, 0x68, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x65,
	0x63, 0x64, 0x64, 0x68, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x63, 0x22, 0x65, 0x0a, 0x1d, 0x50, 0x32, 0x45,
	0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x47, 0x65, 0x6e, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x7a, 0x6b, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x7a, 0x6b, 0x70,
	0x22, 0x66, 0x0a, 0x1e, 0x50, 0x32, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x4b,
	0x65, 0x79, 0x47, 0x65, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x77, 0x69, 0x74, 0x6e,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x73, 0x73, 0x6c,
	0x69, 0x62, 0x2e, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x22, 0x52, 0x0a, 0x12, 0x45, 0x70, 0x68, 0x65,
	0x6d, 0x65, 0x72, 0x61, 0x6c, 0x45, 0x63, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x79, 0x22, 0xdf, 0x01, 0x0a,
	0x1e, 0x50, 0x32, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x67, 0x65, 0x6e, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x73, 0x73, 0x6c, 0x69, 0x62, 0x2e, 0x50, 0x32, 0x45, 0x70,
	0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x47, 0x65, 0x6e, 0x46, 0x69, 0x72,
	0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x67, 0x65,
	0x6e, 0x6d, 0x73, 0x67, 0x12, 0x38, 0x0a, 0x07, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x73, 0x73, 0x6c, 0x69, 0x62, 0x2e, 0x45,
	0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x57, 0x69,
	0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x07, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x3e,
	0x0a, 0x0c, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x73, 0x73, 0x6c, 0x69, 0x62, 0x2e, 0x45, 0x70,
	0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x45, 0x63, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72,
	0x52, 0x0c, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x6b, 0x65, 0x79, 0x22, 0xaa,
	0x01, 0x0a, 0x1d, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x43, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x47, 0x65, 0x6e, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x73, 0x73, 0x6c, 0x69, 0x62, 0x2e, 0x50, 0x31, 0x45,
	0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x47, 0x65, 0x6e, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x47,
	0x65, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x44, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x57,
	0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74,
	0x73, 0x73, 0x6c, 0x69, 0x62, 0x2e, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x0d, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x22, 0xf1, 0x01, 0x0a, 0x15,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x65, 0x70,
	0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x2e, 0x0a,
	0x12, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x65, 0x70, 0x68, 0x65, 0x6d,
	0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x28, 0x0a, 0x16, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x43, 0x33, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x43, 0x33, 0x42, 0x0e, 0x5a, 0x0c, 0x2f, 0x65, 0x63,
	0x64, 0x73, 0x61, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_keygen_proto_rawDescOnce sync.Once
	file_keygen_proto_rawDescData = file_keygen_proto_rawDesc
)

func file_keygen_proto_rawDescGZIP() []byte {
	file_keygen_proto_rawDescOnce.Do(func() {
		file_keygen_proto_rawDescData = protoimpl.X.CompressGZIP(file_keygen_proto_rawDescData)
	})
	return file_keygen_proto_rawDescData
}

var file_keygen_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_keygen_proto_goTypes = []interface{}{
	(*DlogProof)(nil),                      // 0: tsslib.DlogProof
	(*EcddhProof)(nil),                     // 1: tsslib.EcddhProof
	(*EcddhStatement)(nil),                 // 2: tsslib.EcddhStatement
	(*EcddhWitness)(nil),                   // 3: tsslib.EcddhWitness
	(*P2KeyGenFirstMessage)(nil),           // 4: tsslib.P2KeyGenFirstMessage
	(*P1KeyGenFirstMessage)(nil),           // 5: tsslib.P1KeyGenFirstMessage
	(*CommitWitness)(nil),                  // 6: tsslib.CommitWitness
	(*P1KeyGenSecondMessage)(nil),          // 7: tsslib.P1KeyGenSecondMessage
	(*PublicKeyRequest)(nil),               // 8: tsslib.PublicKeyRequest
	(*PublicKeyResponse)(nil),              // 9: tsslib.PublicKeyResponse
	(*EphemeralCommitWitness)(nil),         // 10: tsslib.EphemeralCommitWitness
	(*P1EphemeralKeyGenFirstMessage)(nil),  // 11: tsslib.P1EphemeralKeyGenFirstMessage
	(*P2EphemeralKeyGenFirstMessage)(nil),  // 12: tsslib.P2EphemeralKeyGenFirstMessage
	(*P2EphemeralKeyGenSecondMessage)(nil), // 13: tsslib.P2EphemeralKeyGenSecondMessage
	(*EphemeralEcKeyPair)(nil),             // 14: tsslib.EphemeralEcKeyPair
	(*P2EphemeralCommitmentsResponse)(nil), // 15: tsslib.P2EphemeralCommitmentsResponse
	(*EphemeralKeyVerificationInput)(nil),  // 16: tsslib.EphemeralKeyVerificationInput
	(*PartialSignatureInput)(nil),          // 17: tsslib.PartialSignatureInput
	(*PartialSignatureOutput)(nil),         // 18: tsslib.PartialSignatureOutput
}
var file_keygen_proto_depIdxs = []int32{
	0,  // 0: tsslib.P2KeyGenFirstMessage.dlnproof:type_name -> tsslib.DlogProof
	6,  // 1: tsslib.P1KeyGenSecondMessage.witness:type_name -> tsslib.CommitWitness
	1,  // 2: tsslib.EphemeralCommitWitness.dlogproof:type_name -> tsslib.EcddhProof
	10, // 3: tsslib.P2EphemeralKeyGenSecondMessage.commitwitness:type_name -> tsslib.EphemeralCommitWitness
	12, // 4: tsslib.P2EphemeralCommitmentsResponse.keygenmsg:type_name -> tsslib.P2EphemeralKeyGenFirstMessage
	10, // 5: tsslib.P2EphemeralCommitmentsResponse.witness:type_name -> tsslib.EphemeralCommitWitness
	14, // 6: tsslib.P2EphemeralCommitmentsResponse.ephemeralkey:type_name -> tsslib.EphemeralEcKeyPair
	11, // 7: tsslib.EphemeralKeyVerificationInput.keyGenMsg:type_name -> tsslib.P1EphemeralKeyGenFirstMessage
	10, // 8: tsslib.EphemeralKeyVerificationInput.commitWitness:type_name -> tsslib.EphemeralCommitWitness
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_keygen_proto_init() }
func file_keygen_proto_init() {
	if File_keygen_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_keygen_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DlogProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keygen_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EcddhProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keygen_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EcddhStatement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keygen_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EcddhWitness); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keygen_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P2KeyGenFirstMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keygen_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P1KeyGenFirstMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keygen_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitWitness); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keygen_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P1KeyGenSecondMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keygen_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keygen_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keygen_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EphemeralCommitWitness); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keygen_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P1EphemeralKeyGenFirstMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keygen_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P2EphemeralKeyGenFirstMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keygen_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P2EphemeralKeyGenSecondMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keygen_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EphemeralEcKeyPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keygen_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P2EphemeralCommitmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keygen_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EphemeralKeyVerificationInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keygen_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartialSignatureInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keygen_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartialSignatureOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_keygen_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_keygen_proto_goTypes,
		DependencyIndexes: file_keygen_proto_depIdxs,
		MessageInfos:      file_keygen_proto_msgTypes,
	}.Build()
	File_keygen_proto = out.File
	file_keygen_proto_rawDesc = nil
	file_keygen_proto_goTypes = nil
	file_keygen_proto_depIdxs = nil
}
